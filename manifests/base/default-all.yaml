apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: fe822acaf28806c5f4e10c4c782ba3d408ea1411b1ff836361bcd9d37cc8e774
      cni.projectcalico.org/podIP: 172.18.137.73/32
      cni.projectcalico.org/podIPs: 172.18.137.73/32
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"busybox"},"name":"busybox","namespace":"default"},"spec":{"containers":[{"command":["sleep","3600"],"image":"busybox","imagePullPolicy":"IfNotPresent","name":"busybox"}]}}
    creationTimestamp: "2025-09-08T11:05:35Z"
    generation: 1
    labels:
      app: busybox
    name: busybox
    namespace: default
    resourceVersion: "23413"
    uid: 6ba37ae2-01e1-4ad0-be55-51e08775c92a
  spec:
    containers:
    - command:
      - sleep
      - "3600"
      image: busybox
      imagePullPolicy: IfNotPresent
      name: busybox
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2n2q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-b2n2q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T11:05:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T11:05:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://604314034d16863522b2c826388973dfffae4b7bef409a78ee6e529db16a794e
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:ab33eacc8251e3807b85bb6dba570e4698c3998eca6f0fc2ccb60575a563ea74
      lastState:
        terminated:
          containerID: containerd://4de7ddbb2ee913cda44ceff70ff5b7c6b8d8c0e9d0417253f97eebd336589e30
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T16:35:26Z"
      name: busybox
      ready: true
      resources: {}
      restartCount: 11
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:50Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 10
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2n2q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Running
    podIP: 172.18.137.73
    podIPs:
    - ip: 172.18.137.73
    qosClass: BestEffort
    startTime: "2025-09-08T11:05:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 160bf787b4531e62c14b3d2d184608d2142634391034bd810f4cd5eb7fa80827
      cni.projectcalico.org/podIP: 172.18.137.71/32
      cni.projectcalico.org/podIPs: 172.18.137.71/32
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"netshoot"},"name":"netshoot","namespace":"default"},"spec":{"containers":[{"command":["sleep","3600"],"image":"nicolaka/netshoot","name":"netshoot"}]}}
    creationTimestamp: "2025-09-14T18:01:39Z"
    generation: 1
    labels:
      app: netshoot
    name: netshoot
    namespace: default
    resourceVersion: "23412"
    uid: deedd30b-fcfe-408a-b01d-332d2c510a22
  spec:
    containers:
    - command:
      - sleep
      - "3600"
      image: nicolaka/netshoot
      imagePullPolicy: Always
      name: netshoot
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7pgl5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7pgl5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-14T18:01:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-14T18:01:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9301ae68b0799478d2f8dee44965f4ecc472968a83444265e3b8fb08248f0089
      image: docker.io/nicolaka/netshoot:latest
      imageID: docker.io/nicolaka/netshoot@sha256:7f08c4aff13ff61a35d30e30c5c1ea8396eac6ab4ce19fd02d5a4b3b5d0d09a2
      lastState:
        terminated:
          containerID: containerd://4b7b9e7250aeb60d9c7f2ba701e756c7d5edd77bd45d05d6fcc12f7967448f20
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T16:35:50Z"
      name: netshoot
      ready: true
      resources: {}
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:49Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7pgl5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Running
    podIP: 172.18.137.71
    podIPs:
    - ip: 172.18.137.71
    qosClass: BestEffort
    startTime: "2025-09-14T18:01:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 424024311705d71ed68b5dfc1e1fd5c4a15b7bf66321b345a9b08b494b33a42d
      cni.projectcalico.org/podIP: 172.18.137.76/32
      cni.projectcalico.org/podIPs: 172.18.137.76/32
    creationTimestamp: "2025-09-15T01:15:46Z"
    generateName: nginx-96b9d695-
    generation: 1
    labels:
      app: nginx
      pod-template-hash: 96b9d695
    name: nginx-96b9d695-whw7d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-96b9d695
      uid: b81e9f2e-32cd-49ef-9fdc-9d6c53d7fa4d
    resourceVersion: "23504"
    uid: f2a41821-2aa8-4a3a-97ae-1e59377adbcc
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ccxxb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ccxxb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T01:15:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T01:15:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d5fe4e3d0d1129f0e28f5eafc8d50ab420a1147523f182580c8a374ea68f814
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:d5f28ef21aabddd098f3dbc21fe5b7a7d7a184720bc07da0b6c9b9820e97f25e
      lastState:
        terminated:
          containerID: containerd://ca6ffd14c3135ef2901faff04efcc23be032a56086308e62f3da9df1e84f64ad
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:27Z"
      name: nginx
      ready: true
      resources: {}
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:54Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ccxxb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Running
    podIP: 172.18.137.76
    podIPs:
    - ip: 172.18.137.76
    qosClass: BestEffort
    startTime: "2025-09-15T01:15:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 8e8c60165583beb6cdf8fde90dbd5761a2c656df7cd1bbecd675d345517f4e6c
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2025-09-17T22:09:36Z"
    generateName: pg-backup-29301240-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
      batch.kubernetes.io/job-name: pg-backup-29301240
      controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
      job-name: pg-backup-29301240
    name: pg-backup-29301240-wc98k
    namespace: default
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pg-backup-29301240
      uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
    resourceVersion: "23515"
    uid: 72311dba-a64a-4f9c-97e4-9c959a3a21c5
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        FILE=/backups/backup-$(date +\%F-\%H%M).sql
        PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB > $FILE
        echo "$Backup saved to $FILE"
      envFrom:
      - secretRef:
          name: pg-backup-secret
      image: postgres:15
      imagePullPolicy: IfNotPresent
      name: pg-backup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /backups
        name: backup-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ztgj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: backup-storage
      persistentVolumeClaim:
        claimName: pg-backup-pvc
    - name: kube-api-access-7ztgj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:55Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:54Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:54Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1541bed50ec73711defa0ed216d98708708841cf00faad208650c4c52af24bcd
      image: docker.io/library/postgres:15
      imageID: docker.io/library/postgres@sha256:1cd9dd548427751dc0fabb24a3bdf96a6dd08c0025a167ecbb5c14bec21ff94c
      lastState: {}
      name: pg-backup
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1541bed50ec73711defa0ed216d98708708841cf00faad208650c4c52af24bcd
          exitCode: 0
          finishedAt: "2025-09-17T22:09:53Z"
          reason: Completed
          startedAt: "2025-09-17T22:09:53Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /backups
        name: backup-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ztgj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Succeeded
    podIP: 172.18.137.77
    podIPs:
    - ip: 172.18.137.77
    qosClass: BestEffort
    startTime: "2025-09-17T22:09:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d7870f6f378b358670d575ccc1f0274d3329fa2f4fcc11fbd3fca44baee1d963
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2025-09-15T16:32:48Z"
    generateName: pg-backup-test-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
      batch.kubernetes.io/job-name: pg-backup-test
      controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
      job-name: pg-backup-test
    name: pg-backup-test-74hj4
    namespace: default
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: pg-backup-test
      uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
    resourceVersion: "23185"
    uid: 82699ef5-6482-4df6-ad7c-1c38612837f6
  spec:
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        FILE=/backups/backup-$(date +\%F-\%H%M).sql
        PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB > $FILE
        echo "$Backup saved to $FILE"
      envFrom:
      - secretRef:
          name: pg-backup-secret
      image: postgres:15
      imagePullPolicy: IfNotPresent
      name: pg-backup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /backups
        name: backup-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lqjh2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: backup-storage
      persistentVolumeClaim:
        claimName: pg-backup-pvc
    - name: kube-api-access-lqjh2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T16:33:51Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T16:32:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T16:32:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T16:32:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T16:32:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2199e2b346eb1331f1d45a4305837a38c4c61e9e64d1b2518b08397a10a98399
      image: docker.io/library/postgres:15
      imageID: docker.io/library/postgres@sha256:1cd9dd548427751dc0fabb24a3bdf96a6dd08c0025a167ecbb5c14bec21ff94c
      lastState: {}
      name: pg-backup
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2199e2b346eb1331f1d45a4305837a38c4c61e9e64d1b2518b08397a10a98399
          exitCode: 0
          finishedAt: "2025-09-15T16:33:49Z"
          reason: Completed
          startedAt: "2025-09-15T16:33:49Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /backups
        name: backup-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lqjh2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2025-09-15T16:32:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 83b2fbf2542a51ebcaf54f5363e44351dd7a1e565c4ab4761a71a029813aa1da
      cni.projectcalico.org/podIP: 172.18.235.139/32
      cni.projectcalico.org/podIPs: 172.18.235.139/32
    creationTimestamp: "2025-09-15T15:58:12Z"
    generateName: postgres-
    generation: 1
    labels:
      app: postgres
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: postgres-5748f9c956
      statefulset.kubernetes.io/pod-name: postgres-0
    name: postgres-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: postgres
      uid: f17a92f7-36ad-4b97-8784-1d251bae8456
    resourceVersion: "23595"
    uid: 444130e5-1b44-4d47-b2b6-8d7e9baf24e6
  spec:
    containers:
    - env:
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: postgres-secret
      image: postgres:15
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjljz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: postgres-0
    nodeName: worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: postgres-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: postgres-storage
      persistentVolumeClaim:
        claimName: postgres-storage-postgres-0
    - name: kube-api-access-hjljz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T15:58:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T15:58:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2ea67d14baa17ad3e39056d9d01d0d174ea66516e5bcae21fb2764890dec4b7a
      image: docker.io/library/postgres:15
      imageID: docker.io/library/postgres@sha256:1cd9dd548427751dc0fabb24a3bdf96a6dd08c0025a167ecbb5c14bec21ff94c
      lastState:
        terminated:
          containerID: containerd://0786caadfd1443a5404b9ed31de17fd71224d70c8ba2b100d2b14fe8e19192cc
          exitCode: 255
          finishedAt: "2025-09-17T22:09:37Z"
          reason: Unknown
          startedAt: "2025-09-15T15:58:12Z"
      name: postgres
      ready: true
      resources: {}
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:10:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjljz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.129
    hostIPs:
    - ip: 192.168.81.129
    phase: Running
    podIP: 172.18.235.139
    podIPs:
    - ip: 172.18.235.139
    qosClass: BestEffort
    startTime: "2025-09-15T15:58:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 94d59a0b10f1f4392b23ee23e6f44dfda971b90ef475994805caa322b28aaec0
      cni.projectcalico.org/podIP: 172.18.137.74/32
      cni.projectcalico.org/podIPs: 172.18.137.74/32
      kubectl.kubernetes.io/restartedAt: "2025-09-08T21:40:22+08:00"
    creationTimestamp: "2025-09-08T13:40:20Z"
    generateName: postgres-76d88db5cd-
    generation: 1
    labels:
      app: postgres
      pod-template-hash: 76d88db5cd
    name: postgres-76d88db5cd-wxm6h
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgres-76d88db5cd
      uid: aa2dac63-2757-426b-8e44-77f7d804be0f
    resourceVersion: "23414"
    uid: 8bf560c5-a40d-4c55-aca3-4d6cb2cbeb15
  spec:
    containers:
    - env:
      - name: POSTGRES_USER
        value: admin
      - name: POSTGRES_PASSWORD
        value: admin123
      - name: POSTGRES_DB
        value: sampdb
      image: postgres:14
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k76zc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k76zc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:40:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:40:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e0a988988785b0d818b977903a61fba070aebd5b0de59a6dfb9d39eba4764ffb
      image: docker.io/library/postgres:14
      imageID: docker.io/library/postgres@sha256:757091bc4578dc8feca10a26316e4f72f326cbbd30d042c621791682fe7ca2c0
      lastState:
        terminated:
          containerID: containerd://b956953607a462f52e01073413653ce01b6c3ff8204062bfba37b6386a363ee2
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:34Z"
      name: postgres
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:50Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k76zc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Running
    podIP: 172.18.137.74
    podIPs:
    - ip: 172.18.137.74
    qosClass: BestEffort
    startTime: "2025-09-08T13:40:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e5c09fab5cd1f7ac54061d5809c11db4e9c67a696564b2c27e601b19b927b51c
      cni.projectcalico.org/podIP: 172.18.235.142/32
      cni.projectcalico.org/podIPs: 172.18.235.142/32
    creationTimestamp: "2025-09-08T11:05:36Z"
    generateName: redis-7b986b9f57-
    generation: 1
    labels:
      app: redis
      pod-template-hash: 7b986b9f57
    name: redis-7b986b9f57-jsh2q
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-7b986b9f57
      uid: 1bf8ab2f-50ff-46b7-afca-4a989a9023ce
    resourceVersion: "23585"
    uid: eaacde3f-0206-4adc-a1d4-13c119c29ec2
  spec:
    containers:
    - image: redis:7
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dbsbk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dbsbk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T11:05:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T11:05:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://26f1c16cf241f02fcc90979a72de17c5fe28fc69eefffbafc5a596d38ea4f647
      image: docker.io/library/redis:7
      imageID: docker.io/library/redis@sha256:4421962706d7a901cbd435282515704040203d67c653160e3a46a27b79c40e19
      lastState:
        terminated:
          containerID: containerd://ccab4c51e4d7d3aa7b41ed1639273e03e0c57703ba8e20d63d49fb611673fe23
          exitCode: 255
          finishedAt: "2025-09-17T22:09:37Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:25Z"
      name: redis
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:10:03Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dbsbk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.129
    hostIPs:
    - ip: 192.168.81.129
    phase: Running
    podIP: 172.18.235.142
    podIPs:
    - ip: 172.18.235.142
    qosClass: BestEffort
    startTime: "2025-09-08T11:05:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 2ec0b693b737c90f4d0862fb8f93a7092aec4de2835b543da2ccd95f0a60f1f8
      cni.projectcalico.org/podIP: 172.18.137.72/32
      cni.projectcalico.org/podIPs: 172.18.137.72/32
    creationTimestamp: "2025-09-08T13:27:18Z"
    generateName: sampapp-6788976bbf-
    generation: 1
    labels:
      app: sampapp
      pod-template-hash: 6788976bbf
    name: sampapp-6788976bbf-6l2pl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sampapp-6788976bbf
      uid: 304f56f5-140b-450b-8740-17ce3a79be3d
    resourceVersion: "23440"
    uid: fbd5d9bd-61df-4aca-ac8e-e0377c4f030d
  spec:
    containers:
    - image: mikiangelica/sampapp:v1
      imagePullPolicy: IfNotPresent
      name: sampapp
      ports:
      - containerPort: 5000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgbkh
        readOnly: true
    - command:
      - sleep
      - infinity
      image: nicolaka/netshoot
      imagePullPolicy: Always
      name: netshoot
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgbkh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wgbkh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:27:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:09:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:27:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b60aae693f951a1d428b0a40e144088995288cf79e194ea0d1c8ab835b7beaa4
      image: docker.io/nicolaka/netshoot:latest
      imageID: docker.io/nicolaka/netshoot@sha256:7f08c4aff13ff61a35d30e30c5c1ea8396eac6ab4ce19fd02d5a4b3b5d0d09a2
      lastState:
        terminated:
          containerID: containerd://fb30be819e81533cde164c9cd01e8686e18f3acc77a0ad65f0132cc929389ee9
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:30Z"
      name: netshoot
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:51Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgbkh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://8a62145223a780b687871df7d478d1b5939864dde8f20285116e11dcd2d79f51
      image: docker.io/mikiangelica/sampapp:v1
      imageID: docker.io/mikiangelica/sampapp@sha256:4edf6886f8fd396dbf1aad640c37d04741be4755774a7d525a970bf637c9e44e
      lastState:
        terminated:
          containerID: containerd://5b0a69e8db88c479c6a6bcb40c3e316ff0dce3685204b0c7ba4de9d81b92c506
          exitCode: 255
          finishedAt: "2025-09-17T22:09:27Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:27Z"
      name: sampapp
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:09:48Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgbkh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Running
    podIP: 172.18.137.72
    podIPs:
    - ip: 172.18.137.72
    qosClass: BestEffort
    startTime: "2025-09-08T13:27:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 91ff291854d2d7892e1d6fe82d1087d524a6e671fb438ea9bb6ea7057fa43b59
      cni.projectcalico.org/podIP: 172.18.235.145/32
      cni.projectcalico.org/podIPs: 172.18.235.145/32
    creationTimestamp: "2025-09-08T13:26:06Z"
    generateName: sampapp-6788976bbf-
    generation: 1
    labels:
      app: sampapp
      pod-template-hash: 6788976bbf
    name: sampapp-6788976bbf-g6797
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sampapp-6788976bbf
      uid: 304f56f5-140b-450b-8740-17ce3a79be3d
    resourceVersion: "23638"
    uid: 3cf1fdeb-c63e-4be9-a65b-e35a5e49dccf
  spec:
    containers:
    - image: mikiangelica/sampapp:v1
      imagePullPolicy: IfNotPresent
      name: sampapp
      ports:
      - containerPort: 5000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhz7h
        readOnly: true
    - command:
      - sleep
      - infinity
      image: nicolaka/netshoot
      imagePullPolicy: Always
      name: netshoot
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhz7h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mhz7h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:26:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-17T22:10:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T13:26:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://addb51ca95d5bfc1a0567a67a85bda81616c28baa3fa585f3ba588919dd270e3
      image: docker.io/nicolaka/netshoot:latest
      imageID: docker.io/nicolaka/netshoot@sha256:7f08c4aff13ff61a35d30e30c5c1ea8396eac6ab4ce19fd02d5a4b3b5d0d09a2
      lastState:
        terminated:
          containerID: containerd://4636246358e7cd5b89128aca83e61569b1d772114c695e07bc0dc7e8addc0250
          exitCode: 255
          finishedAt: "2025-09-17T22:09:37Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:40Z"
      name: netshoot
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:10:06Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhz7h
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7ea510ec76881983f4fed34f7432bece1de84e54b84f6763b6f404f9cc2aa558
      image: docker.io/mikiangelica/sampapp:v1
      imageID: docker.io/mikiangelica/sampapp@sha256:4edf6886f8fd396dbf1aad640c37d04741be4755774a7d525a970bf637c9e44e
      lastState:
        terminated:
          containerID: containerd://a502eb9fcfdbbddfe2432341e29395b62418d44895c5f5ddd9012beb5da1e12c
          exitCode: 255
          finishedAt: "2025-09-17T22:09:37Z"
          reason: Unknown
          startedAt: "2025-09-15T13:35:36Z"
      name: sampapp
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-09-17T22:10:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mhz7h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.129
    hostIPs:
    - ip: 192.168.81.129
    phase: Running
    podIP: 172.18.235.145
    podIPs:
    - ip: 172.18.235.145
    qosClass: BestEffort
    startTime: "2025-09-08T13:26:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9bb3f5f806f92eeaeafae66504ad2a3d7782061d06de3d374db002c901f51b9a
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2025-09-15T13:58:40Z"
    generation: 1
    labels:
      run: test1
    name: test1
    namespace: default
    resourceVersion: "23310"
    uid: c02a092c-7602-44e7-a18c-1bc306ce9432
  spec:
    containers:
    - args:
      - sleep
      - "3600"
      image: busybox:1.28
      imagePullPolicy: IfNotPresent
      name: test1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ht2qp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ht2qp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:58:50Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T13:58:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:58:49Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:58:49Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T13:58:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://73819c57b2eb3d654f664dbe41d7e133c8699d8506dde030a0a5e6476af4a4fc
      image: docker.io/library/busybox:1.28
      imageID: docker.io/library/busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47
      lastState: {}
      name: test1
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://73819c57b2eb3d654f664dbe41d7e133c8699d8506dde030a0a5e6476af4a4fc
          exitCode: 0
          finishedAt: "2025-09-15T14:58:48Z"
          reason: Completed
          startedAt: "2025-09-15T13:58:48Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 10
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ht2qp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.129
    hostIPs:
    - ip: 192.168.81.129
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2025-09-15T13:58:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: bb03285b56a4710a289bf1664342a8651b72686d74e22aaf92db854cf065d4f0
      cni.projectcalico.org/podIP: ""
      cni.projectcalico.org/podIPs: ""
    creationTimestamp: "2025-09-15T13:59:18Z"
    generation: 1
    labels:
      run: test2
    name: test2
    namespace: default
    resourceVersion: "23183"
    uid: a0b4a38c-1985-4744-aa93-2acd9787fb2d
  spec:
    containers:
    - args:
      - sleep
      - "3600"
      image: busybox:1.28
      imagePullPolicy: IfNotPresent
      name: test2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mx2m8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mx2m8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:59:29Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T13:59:18Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:59:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T14:59:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-15T13:59:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3a9722a46a69a5bc8094645deebfa1ec25fea1d7b2a7f5eea1485f5795b5b361
      image: docker.io/library/busybox:1.28
      imageID: docker.io/library/busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47
      lastState: {}
      name: test2
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a9722a46a69a5bc8094645deebfa1ec25fea1d7b2a7f5eea1485f5795b5b361
          exitCode: 0
          finishedAt: "2025-09-15T14:59:27Z"
          reason: Completed
          startedAt: "2025-09-15T13:59:27Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 10
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mx2m8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.81.128
    hostIPs:
    - ip: 192.168.81.128
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2025-09-15T13:59:18Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-08T10:09:34Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "63"
    uid: 5c5b934f-12d8-4ac2-a717-8204e57335af
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"nginx-service","namespace":"default"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"nginx"}}}
    creationTimestamp: "2025-09-08T11:05:35Z"
    name: nginx-service
    namespace: default
    resourceVersion: "2532"
    uid: 7f8a8962-c11f-46c6-b14a-fafd89e55f8d
  spec:
    clusterIP: 10.43.104.188
    clusterIPs:
    - 10.43.104.188
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"postgres-service","namespace":"default"},"spec":{"ports":[{"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app":"postgres"}}}
    creationTimestamp: "2025-09-08T11:06:10Z"
    name: postgres-service
    namespace: default
    resourceVersion: "2627"
    uid: 30c58784-f9ec-4f70-8266-8bf0b375c9f2
  spec:
    clusterIP: 10.43.178.155
    clusterIPs:
    - 10.43.178.155
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"redis-service","namespace":"default"},"spec":{"ports":[{"port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"app":"redis"}}}
    creationTimestamp: "2025-09-08T11:05:35Z"
    name: redis-service
    namespace: default
    resourceVersion: "2544"
    uid: 2742b2af-19db-43cc-b425-66f330245386
  spec:
    clusterIP: 10.43.146.71
    clusterIPs:
    - 10.43.146.71
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"sampapp-service","namespace":"default"},"spec":{"ports":[{"port":5000,"protocol":"TCP","targetPort":5000}],"selector":{"app":"sampapp"}}}
    creationTimestamp: "2025-09-08T11:05:36Z"
    name: sampapp-service
    namespace: default
    resourceVersion: "2558"
    uid: e2e75b90-19f1-45f1-ab3d-305acdee732c
  spec:
    clusterIP: 10.43.133.187
    clusterIPs:
    - 10.43.133.187
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: sampapp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:latest","name":"nginx","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2025-09-08T11:05:35Z"
    generation: 1
    labels:
      app: nginx
    name: nginx
    namespace: default
    resourceVersion: "23508"
    uid: 5258d84f-772d-483f-9418-e13bf98571f0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-08T12:48:39Z"
      lastUpdateTime: "2025-09-08T12:48:39Z"
      message: ReplicaSet "nginx-96b9d695" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-17T22:09:55Z"
      lastUpdateTime: "2025-09-17T22:09:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"postgres"},"name":"postgres","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgres"}},"template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","value":"admin"},{"name":"POSTGRES_PASSWORD","value":"admin123"},{"name":"POSTGRES_DB","value":"sampdb"}],"image":"postgres:14","name":"postgres","ports":[{"containerPort":5432}]}]}}}}
    creationTimestamp: "2025-09-08T11:06:10Z"
    generation: 3
    labels:
      app: postgres
    name: postgres
    namespace: default
    resourceVersion: "23418"
    uid: ed5720be-6f8c-4029-9d8c-1d29b6ae8ea0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-08T21:40:22+08:00"
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_PASSWORD
            value: admin123
          - name: POSTGRES_DB
            value: sampdb
          image: postgres:14
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-08T12:49:10Z"
      lastUpdateTime: "2025-09-08T13:40:21Z"
      message: ReplicaSet "postgres-76d88db5cd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-17T22:09:50Z"
      lastUpdateTime: "2025-09-17T22:09:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis"},"name":"redis","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"redis"}},"template":{"metadata":{"labels":{"app":"redis"}},"spec":{"containers":[{"image":"redis:7","name":"redis","ports":[{"containerPort":6379}]}]}}}}
    creationTimestamp: "2025-09-08T11:05:35Z"
    generation: 1
    labels:
      app: redis
    name: redis
    namespace: default
    resourceVersion: "23590"
    uid: 40cc04ad-859e-49dc-ab21-9672eb42fa21
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis
      spec:
        containers:
        - image: redis:7
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-08T11:05:36Z"
      lastUpdateTime: "2025-09-08T11:09:24Z"
      message: ReplicaSet "redis-7b986b9f57" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-17T22:10:03Z"
      lastUpdateTime: "2025-09-17T22:10:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"sampapp"},"name":"sampapp","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"sampapp"}},"template":{"metadata":{"labels":{"app":"sampapp"}},"spec":{"containers":[{"image":"mikiangelica/sampapp:v1","name":"sampapp","ports":[{"containerPort":5000}]},{"command":["sleep","infinity"],"image":"nicolaka/netshoot","name":"netshoot"}]}}}}
    creationTimestamp: "2025-09-08T11:05:36Z"
    generation: 2
    labels:
      app: sampapp
    name: sampapp
    namespace: default
    resourceVersion: "23642"
    uid: b7c40020-d820-4abb-b14e-ef630ce8cc1a
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: sampapp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sampapp
      spec:
        containers:
        - image: mikiangelica/sampapp:v1
          imagePullPolicy: IfNotPresent
          name: sampapp
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sleep
          - infinity
          image: nicolaka/netshoot
          imagePullPolicy: Always
          name: netshoot
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-08T11:05:36Z"
      lastUpdateTime: "2025-09-08T13:27:23Z"
      message: ReplicaSet "sampapp-6788976bbf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-17T22:10:07Z"
      lastUpdateTime: "2025-09-17T22:10:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-08T11:05:35Z"
    generation: 1
    labels:
      app: nginx
      pod-template-hash: 96b9d695
    name: nginx-96b9d695
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx
      uid: 5258d84f-772d-483f-9418-e13bf98571f0
    resourceVersion: "23506"
    uid: b81e9f2e-32cd-49ef-9fdc-9d6c53d7fa4d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nginx
        pod-template-hash: 96b9d695
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
          pod-template-hash: 96b9d695
      spec:
        containers:
        - image: nginx:latest
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-08T13:38:01Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: 6f5786c9df
    name: postgres-6f5786c9df
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: ed5720be-6f8c-4029-9d8c-1d29b6ae8ea0
    resourceVersion: "7352"
    uid: 7e67fd28-ab80-43b7-be69-934e84221af0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 6f5786c9df
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-08T21:38:02+08:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 6f5786c9df
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_PASSWORD
            value: admin123
          - name: POSTGRES_DB
            value: sampdb
          image: postgres:14
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-08T13:40:20Z"
    generation: 1
    labels:
      app: postgres
      pod-template-hash: 76d88db5cd
    name: postgres-76d88db5cd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: ed5720be-6f8c-4029-9d8c-1d29b6ae8ea0
    resourceVersion: "23416"
    uid: aa2dac63-2757-426b-8e44-77f7d804be0f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 76d88db5cd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-08T21:40:22+08:00"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 76d88db5cd
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_PASSWORD
            value: admin123
          - name: POSTGRES_DB
            value: sampdb
          image: postgres:14
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-08T11:06:10Z"
    generation: 2
    labels:
      app: postgres
      pod-template-hash: d775f67cc
    name: postgres-d775f67cc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: ed5720be-6f8c-4029-9d8c-1d29b6ae8ea0
    resourceVersion: "7276"
    uid: 3453b449-1b12-419f-8d42-6a7190c62497
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: d775f67cc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: d775f67cc
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_PASSWORD
            value: admin123
          - name: POSTGRES_DB
            value: sampdb
          image: postgres:14
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-08T11:05:35Z"
    generation: 1
    labels:
      app: redis
      pod-template-hash: 7b986b9f57
    name: redis-7b986b9f57
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: 40cc04ad-859e-49dc-ab21-9672eb42fa21
    resourceVersion: "23587"
    uid: 1bf8ab2f-50ff-46b7-afca-4a989a9023ce
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis
        pod-template-hash: 7b986b9f57
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis
          pod-template-hash: 7b986b9f57
      spec:
        containers:
        - image: redis:7
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-08T13:26:06Z"
    generation: 2
    labels:
      app: sampapp
      pod-template-hash: 6788976bbf
    name: sampapp-6788976bbf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sampapp
      uid: b7c40020-d820-4abb-b14e-ef630ce8cc1a
    resourceVersion: "23640"
    uid: 304f56f5-140b-450b-8740-17ce3a79be3d
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: sampapp
        pod-template-hash: 6788976bbf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sampapp
          pod-template-hash: 6788976bbf
      spec:
        containers:
        - image: mikiangelica/sampapp:v1
          imagePullPolicy: IfNotPresent
          name: sampapp
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - sleep
          - infinity
          image: nicolaka/netshoot
          imagePullPolicy: Always
          name: netshoot
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-08T11:05:36Z"
    generation: 3
    labels:
      app: sampapp
      pod-template-hash: 8474fc56bc
    name: sampapp-8474fc56bc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sampapp
      uid: b7c40020-d820-4abb-b14e-ef630ce8cc1a
    resourceVersion: "6943"
    uid: 2ffc17fd-f79a-4d9f-8431-6c786dbf4e96
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: sampapp
        pod-template-hash: 8474fc56bc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sampapp
          pod-template-hash: 8474fc56bc
      spec:
        containers:
        - image: mikiangelica/sampapp:v1
          imagePullPolicy: IfNotPresent
          name: sampapp
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"postgres","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgres"}},"serviceName":"postgres-service","template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"postgres-secret"}}}],"image":"postgres:15","name":"postgres","ports":[{"containerPort":5432}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgres-storage"}]}]}},"volumeClaimTemplates":[{"metadata":{"name":"postgres-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"storageClassName":"local-path"}}]}}
    creationTimestamp: "2025-09-14T17:25:19Z"
    generation: 1
    name: postgres
    namespace: default
    resourceVersion: "23598"
    uid: f17a92f7-36ad-4b97-8784-1d251bae8456
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    serviceName: postgres-service
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgres-secret
          image: postgres:15
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: postgres-storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: local-path
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: postgres-5748f9c956
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: postgres-5748f9c956
    updatedReplicas: 1
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"batch/v1","kind":"CronJob","metadata":{"annotations":{},"name":"pg-backup","namespace":"default"},"spec":{"jobTemplate":{"spec":{"template":{"spec":{"containers":[{"command":["/bin/sh","-c","FILE=/backups/backup-$(date +\\%F-\\%H%M).sql\nPGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB \u003e $FILE\necho \"$Backup saved to $FILE\"\n"],"envFrom":[{"secretRef":{"name":"pg-backup-secret"}}],"image":"postgres:15","imagePullPolicy":"IfNotPresent","name":"pg-backup","volumeMounts":[{"mountPath":"/backups","name":"backup-storage"}]}],"restartPolicy":"OnFailure","volumes":[{"name":"backup-storage","persistentVolumeClaim":{"claimName":"pg-backup-pvc"}}]}}}},"schedule":"0 2 * * *"}}
    creationTimestamp: "2025-09-15T16:29:53Z"
    generation: 1
    name: pg-backup
    namespace: default
    resourceVersion: "23517"
    uid: de338936-7a4a-4f3f-9c3c-c275680aca2c
  spec:
    concurrencyPolicy: Allow
    failedJobsHistoryLimit: 1
    jobTemplate:
      metadata:
        creationTimestamp: null
      spec:
        template:
          metadata:
            creationTimestamp: null
          spec:
            containers:
            - command:
              - /bin/sh
              - -c
              - |
                FILE=/backups/backup-$(date +\%F-\%H%M).sql
                PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB > $FILE
                echo "$Backup saved to $FILE"
              envFrom:
              - secretRef:
                  name: pg-backup-secret
              image: postgres:15
              imagePullPolicy: IfNotPresent
              name: pg-backup
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /backups
                name: backup-storage
            dnsPolicy: ClusterFirst
            restartPolicy: OnFailure
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
            volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: pg-backup-pvc
    schedule: 0 2 * * *
    successfulJobsHistoryLimit: 3
    suspend: false
  status:
    lastScheduleTime: "2025-09-17T02:00:00Z"
    lastSuccessfulTime: "2025-09-17T22:09:56Z"
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/cronjob-scheduled-timestamp: "2025-09-17T02:00:00Z"
    creationTimestamp: "2025-09-17T22:09:35Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
      batch.kubernetes.io/job-name: pg-backup-29301240
      controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
      job-name: pg-backup-29301240
    name: pg-backup-29301240
    namespace: default
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: CronJob
      name: pg-backup
      uid: de338936-7a4a-4f3f-9c3c-c275680aca2c
    resourceVersion: "23516"
    uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
          batch.kubernetes.io/job-name: pg-backup-29301240
          controller-uid: 56d446d1-5e88-4700-94e1-d82f26ef288e
          job-name: pg-backup-29301240
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            FILE=/backups/backup-$(date +\%F-\%H%M).sql
            PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB > $FILE
            echo "$Backup saved to $FILE"
          envFrom:
          - secretRef:
              name: pg-backup-secret
          image: postgres:15
          imagePullPolicy: IfNotPresent
          name: pg-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /backups
            name: backup-storage
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: backup-storage
          persistentVolumeClaim:
            claimName: pg-backup-pvc
  status:
    completionTime: "2025-09-17T22:09:56Z"
    conditions:
    - lastProbeTime: "2025-09-17T22:09:56Z"
      lastTransitionTime: "2025-09-17T22:09:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-17T22:09:56Z"
      lastTransitionTime: "2025-09-17T22:09:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-17T22:09:35Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      cronjob.kubernetes.io/instantiate: manual
    creationTimestamp: "2025-09-15T16:32:48Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
      batch.kubernetes.io/job-name: pg-backup-test
      controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
      job-name: pg-backup-test
    name: pg-backup-test
    namespace: default
    ownerReferences:
    - apiVersion: batch/v1
      controller: true
      kind: CronJob
      name: pg-backup
      uid: de338936-7a4a-4f3f-9c3c-c275680aca2c
    resourceVersion: "23036"
    uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
          batch.kubernetes.io/job-name: pg-backup-test
          controller-uid: cfc0aeba-691a-4dad-a51a-a99c5c521895
          job-name: pg-backup-test
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            FILE=/backups/backup-$(date +\%F-\%H%M).sql
            PGPASSWORD=$POSTGRES_PASSWORD pg_dump -h postgres-service -U $POSTGRES_USER $POSTGRES_DB > $FILE
            echo "$Backup saved to $FILE"
          envFrom:
          - secretRef:
              name: pg-backup-secret
          image: postgres:15
          imagePullPolicy: IfNotPresent
          name: pg-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /backups
            name: backup-storage
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: backup-storage
          persistentVolumeClaim:
            claimName: pg-backup-pvc
  status:
    completionTime: "2025-09-15T16:33:52Z"
    conditions:
    - lastProbeTime: "2025-09-15T16:33:52Z"
      lastTransitionTime: "2025-09-15T16:33:52Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-15T16:33:52Z"
      lastTransitionTime: "2025-09-15T16:33:52Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-15T16:32:48Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
